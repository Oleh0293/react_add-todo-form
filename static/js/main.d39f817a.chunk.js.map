{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/AddTodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","AddTodoForm","addTodoHandler","useState","todoName","setTodoName","todoNameError","setTodoNameError","userId","setUserId","userIdError","setUserIdError","onSubmit","event","preventDefault","isError","usersFromServer","find","type","placeholder","value","onChange","target","disabled","prepairedTodos","App","setTodos","newTodo","todoIds","maxTodoId","Math","max","preparedTodo","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d39f817a.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../types';\n\ninterface Props { user: User }\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../types';\n\ninterface Props { todo: Todo }\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types';\n\ninterface Props { todos: Todo[] }\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport usersFromServer from '../api/users';\nimport { Todo } from './types';\n\ntype Props = {\n  addTodoHandler: (newTodo: Omit<Todo, 'id'>) => void,\n};\n\nexport const AddTodoForm: React.FC<Props> = ({ addTodoHandler }) => {\n  const [todoName, setTodoName] = useState('');\n  const [todoNameError, setTodoNameError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setTodoName(event.target.value);\n\n    if (todoNameError) {\n      setTodoNameError(false);\n    }\n  }\n\n  function resetForm() {\n    setTodoName('');\n    setUserId(0);\n  }\n\n  function handleOnSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    let isError = false;\n\n    if (todoName === '') {\n      setTodoNameError(true);\n      isError = true;\n    }\n\n    if (userId === 0) {\n      setUserIdError(true);\n      isError = true;\n    }\n\n    if (isError) {\n      return;\n    }\n\n    const user = usersFromServer.find(\n      ({ id }) => id === userId,\n    );\n\n    const newTodo: Omit<Todo, 'id'> = {\n      title: todoName,\n      completed: false,\n      userId,\n      user: user || null,\n    };\n\n    addTodoHandler(newTodo);\n    resetForm();\n  }\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"\"\n          value={todoName}\n          onChange={handleChange}\n        />\n\n        {todoNameError && (\n          <span className=\"error\">\n            Please enter a title\n          </span>\n        )}\n      </div>\n\n      <div>\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={(event) => {\n            setUserId(+event.target.value);\n\n            if (userIdError) {\n              setUserIdError(false);\n            }\n          }}\n        >\n          <option value=\"0\" disabled>\n            Choose a user\n          </option>\n\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {userIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/types';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { AddTodoForm } from './components/AddTodoForm';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst prepairedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(prepairedTodos);\n\n  const addTodoHandler = (newTodo: Omit<Todo, 'id'>) => {\n    const todoIds = todos.map(({ id }) => id);\n    const maxTodoId = Math.max(...todoIds);\n\n    const preparedTodo = {\n      ...newTodo,\n      id: maxTodoId + 1,\n    };\n\n    setTodos((prevState) => [...prevState, preparedTodo]);\n  };\n\n  // console.log(todos);\n\n  return (\n    <div className=\"App\">\n      <h1>Add good form</h1>\n\n      <AddTodoForm\n        addTodoHandler={addTodoHandler}\n      />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}